{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\Requests\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('https://swapi.dev/api/film');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 45\n    }\n  }), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 47\n    }\n  }, \"No movies yet. Please try again later.\"), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\")));\n}\n\nexport default App; // |===== ANOTHER WAY OF API REQUEST =====|\n// function fetchMovieHandler() {\n//   fetch('https://swapi.dev/api/films')\n//     .then((response) => {\n//       return response.json();\n//     })\n//     .then((data) => {\n//       const transformedMovies = data.results.map(movieData => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           openingText: movieData.opening_crawl,\n//           releaseDate: movieData.release_date\n//         };\n//       });\n//       setMovies(transformedMovies);\n//     });\n// }","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/Requests/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeS,iBAAf,GAAmC;AACjCH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACJE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AAEI,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B;AACE,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACE,UAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAI;AACtD,aAAO;AACLC,QAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,QAAAA,WAAW,EAAEJ,SAAS,CAACK,aAHlB;AAILC,QAAAA,WAAW,EAAEN,SAAS,CAACO;AAJlB,OAAP;AAMD,KAPyB,CAA1B;AAQApB,IAAAA,SAAS,CAACU,iBAAD,CAAT;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACL;;AAED,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,SAAD,IAAcF,MAAM,CAACsB,MAAP,GAAgB,CAA9B,iBAAmC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEtB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtC,EAEG,CAACE,SAAD,IAAcF,MAAM,CAACsB,MAAP,KAAkB,CAAhC,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFxC,EAGGpB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHhB,CAJF,CADF;AAYD;;AAED,eAAeH,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function fetchMovieHandler() {\n    setIsLoading(true);\nsetError(null);\n\n    const response = await fetch('https://swapi.dev/api/film')\n      const data = await response.json();\n        const transformedMovies = data.results.map(movieData => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date\n          };\n        });\n        setMovies(transformedMovies);\n        setIsLoading(false);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && <p>No movies yet. Please try again later.</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n// |===== ANOTHER WAY OF API REQUEST =====|\n// function fetchMovieHandler() {\n//   fetch('https://swapi.dev/api/films')\n//     .then((response) => {\n//       return response.json();\n//     })\n//     .then((data) => {\n//       const transformedMovies = data.results.map(movieData => {\n//         return {\n//           id: movieData.episode_id,\n//           title: movieData.title,\n//           openingText: movieData.opening_crawl,\n//           releaseDate: movieData.release_date\n//         };\n//       });\n//       setMovies(transformedMovies);\n//     });\n// }"]},"metadata":{},"sourceType":"module"}