{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\hooks\\\\src\\\\components\\\\UseReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"useReducer Hook:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this), \"Count: \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'decrement'\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), \"||===||\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'increment'\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/hooks/src/components/UseReducer.js"],"names":["React","useReducer","initialState","count","reducer","state","action","type","Error","Counter","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,WAAL;AACC,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACD,SAAK,WAAL;AACC,aAAO;AAAEA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACD;AACC,YAAM,IAAIK,KAAJ,EAAN;AANF;AAQA;;AAED,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBT,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AACA,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,aAESG,KAAK,CAACF,KAFf,eAGC;AAAQ,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,0BAIC;AAAQ,MAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AASA;;GAXQE,O;;KAAAA,O;AAaT,eAAeA,OAAf","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nconst initialState = { count: 0 };\r\n\r\nfunction reducer(state, action) {\r\n\tswitch (action.type) {\r\n\t\tcase 'increment':\r\n\t\t\treturn { count: state.count + 1 };\r\n\t\tcase 'decrement':\r\n\t\t\treturn { count: state.count - 1 };\r\n\t\tdefault:\r\n\t\t\tthrow new Error();\r\n\t}\r\n}\r\n\r\nfunction Counter() {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\treturn (\r\n\t\t<>\r\n\t\t<h3>useReducer Hook:</h3>\r\n\t\t\tCount: {state.count}\r\n\t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||===||\r\n\t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n\t\t\t<hr></hr>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Counter"]},"metadata":{},"sourceType":"module"}