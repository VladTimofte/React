{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\hooks\\\\src\\\\components\\\\UseReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {};\n\nfunction reducer(state, action) {}\n\nfunction Counter() {\n  _s();\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  const [name, setName] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"useReducer Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        calue: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"GaUZ+cD+sH211eZBBfAkdHRUf0k=\");\n\n_c = Counter;\nexport default Counter; // const initialState = { count: 0 };\n// function reducer(state, action) {\n// \tswitch (action.type) {\n// \t\tcase 'increment':\n// \t\t\treturn { count: state.count + 1 };\n// \t\tcase 'decrement':\n// \t\t\treturn { count: state.count - 1 };\n// \t\tdefault:\n// \t\t\tthrow new Error();\n// \t}\n// }\n// function Counter() {\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\n// \treturn (\n// \t\t<>\n// \t\t<h3>useReducer Hook:</h3>\n// \t\t\tCount: {state.count}\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\n// \t\t\t<hr></hr>\n// \t\t</>\n// \t);\n// }\n// export default Counter\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/hooks/src/components/UseReducer.js"],"names":["React","useReducer","ACTIONS","reducer","state","action","Counter","todos","dispatch","name","setName","useState","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,OAAO,GAAG,EAAhB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B,CAE9B;;AAED,SAASC,OAAT,GAAkB;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,OAAD,EAAU,EAAV,CAApC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,6BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEF,IAA1B;AAAgC,QAAA,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADD;AASA;;GAbQR,O;;KAAAA,O;AAeT,eAAeA,OAAf,C,CAsCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nconst ACTIONS = {\r\n\t\r\n}\r\n\r\nfunction reducer(state, action){\r\n\t\r\n}\r\n\r\nfunction Counter(){\r\n\tconst [todos, dispatch] = useReducer(reducer, [])\r\n\tconst [name, setName] = useState('')\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<h3>useReducer Hook</h3>\r\n\t\t<form>\r\n\t\t\t<input type=\"text\" calue={name} onChange={e => setName(e.target.value)}/>\r\n\t\t</form>\r\n\t\t<hr></hr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Counter\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = { count: 0 };\r\n\r\n// function reducer(state, action) {\r\n// \tswitch (action.type) {\r\n// \t\tcase 'increment':\r\n// \t\t\treturn { count: state.count + 1 };\r\n// \t\tcase 'decrement':\r\n// \t\t\treturn { count: state.count - 1 };\r\n// \t\tdefault:\r\n// \t\t\tthrow new Error();\r\n// \t}\r\n// }\r\n\r\n// function Counter() {\r\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t<h3>useReducer Hook:</h3>\r\n// \t\t\tCount: {state.count}\r\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\r\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n// \t\t\t<hr></hr>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\n// export default Counter"]},"metadata":{},"sourceType":"module"}