{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\hooks\\\\src\\\\components\\\\UseReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  return {\n    count: state.count + 1\n  };\n}\n\nfunction Counter() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    count: 0\n  });\n\n  function increment() {\n    dispatch();\n  }\n\n  function decrement() {//Coming up...\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"useReducer Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"pKHgYCLjU1VMOjpBXYd+YdajBlg=\");\n\n_c = Counter;\nexport default Counter; // const initialState = { count: 0 };\n// function reducer(state, action) {\n// \tswitch (action.type) {\n// \t\tcase 'increment':\n// \t\t\treturn { count: state.count + 1 };\n// \t\tcase 'decrement':\n// \t\t\treturn { count: state.count - 1 };\n// \t\tdefault:\n// \t\t\tthrow new Error();\n// \t}\n// }\n// function Counter() {\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\n// \treturn (\n// \t\t<>\n// \t\t<h3>useReducer Hook:</h3>\n// \t\t\tCount: {state.count}\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\n// \t\t\t<hr></hr>\n// \t\t</>\n// \t);\n// }\n// export default Counter\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/hooks/src/components/UseReducer.js"],"names":["React","useReducer","useState","reducer","state","action","count","Counter","dispatch","increment","decrement"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC9B,SAAO;AAACC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AAAtB,GAAP;AACA;;AAED,SAASC,OAAT,GAAkB;AAAA;;AACjB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBP,UAAU,CAACE,OAAD,EAAU;AAACG,IAAAA,KAAK,EAAE;AAAR,GAAV,CAApC;;AAEA,WAASG,SAAT,GAAoB;AACnBD,IAAAA,QAAQ;AACR;;AACD,WAASE,SAAT,GAAoB,CACnB;AACA;;AACD,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gBAAON,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAQ,MAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADD;AASA;;GAlBQF,O;;KAAAA,O;AAoBT,eAAeA,OAAf,C,CAsCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer, useState } from 'react';\r\n\r\nfunction reducer(state, action){\r\n\treturn {count: state.count + 1}\r\n}\r\n\r\nfunction Counter(){\r\n\tconst [state, dispatch] = useReducer(reducer, {count: 0})\r\n\r\n\tfunction increment(){\r\n\t\tdispatch()\r\n\t}\r\n\tfunction decrement(){\r\n\t\t//Coming up...\r\n\t}\r\n\treturn(\r\n\t\t<>\r\n\t\t<h3>useReducer Hook</h3>\r\n\t\t<button onClick={decrement}>-</button>\r\n\t\t<span>{state.count}</span>\r\n\t\t<button onClick={increment}>+</button>\r\n\t\t<hr></hr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Counter\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = { count: 0 };\r\n\r\n// function reducer(state, action) {\r\n// \tswitch (action.type) {\r\n// \t\tcase 'increment':\r\n// \t\t\treturn { count: state.count + 1 };\r\n// \t\tcase 'decrement':\r\n// \t\t\treturn { count: state.count - 1 };\r\n// \t\tdefault:\r\n// \t\t\tthrow new Error();\r\n// \t}\r\n// }\r\n\r\n// function Counter() {\r\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t<h3>useReducer Hook:</h3>\r\n// \t\t\tCount: {state.count}\r\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\r\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n// \t\t\t<hr></hr>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\n// export default Counter"]},"metadata":{},"sourceType":"module"}