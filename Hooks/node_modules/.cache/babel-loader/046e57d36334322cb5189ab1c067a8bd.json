{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\hooks\\\\src\\\\components\\\\UseReducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTIONS = {\n  ADD_TODO: 'add-todo'\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.ADD_TODO:\n      return [...todos, newTodo(name)];\n  }\n}\n\nfunction newTodo(name) {\n  return {\n    id: Date.now(),\n    name: name,\n    complete: false\n  };\n}\n\nfunction Counter() {\n  _s();\n\n  const [todos, dispatch] = useReducer(reducer, []);\n  const [name, setName] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: ACTIONS.ADD_TODO,\n      payload: {\n        name: name\n      }\n    });\n    setName('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"useReducer Hook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      on: true,\n      Submit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        calue: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"GaUZ+cD+sH211eZBBfAkdHRUf0k=\");\n\n_c = Counter;\nexport default Counter; // const initialState = { count: 0 };\n// function reducer(state, action) {\n// \tswitch (action.type) {\n// \t\tcase 'increment':\n// \t\t\treturn { count: state.count + 1 };\n// \t\tcase 'decrement':\n// \t\t\treturn { count: state.count - 1 };\n// \t\tdefault:\n// \t\t\tthrow new Error();\n// \t}\n// }\n// function Counter() {\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\n// \treturn (\n// \t\t<>\n// \t\t<h3>useReducer Hook:</h3>\n// \t\t\tCount: {state.count}\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\n// \t\t\t<hr></hr>\n// \t\t</>\n// \t);\n// }\n// export default Counter\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/hooks/src/components/UseReducer.js"],"names":["React","useReducer","useState","ACTIONS","ADD_TODO","reducer","state","action","type","todos","newTodo","name","id","Date","now","complete","Counter","dispatch","setName","handleSubmit","e","preventDefault","payload","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;AAEA,MAAMC,OAAO,GAAG;AACfC,EAAAA,QAAQ,EAAE;AADK,CAAhB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKL,OAAO,CAACC,QAAb;AACC,aAAO,CAAC,GAAGK,KAAJ,EAAWC,OAAO,CAACC,IAAD,CAAlB,CAAP;AAFF;AAIA;;AAED,SAASD,OAAT,CAAiBC,IAAjB,EAAsB;AACrB,SAAO;AAACC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAL;AAAiBH,IAAAA,IAAI,EAAEA,IAAvB;AAA6BI,IAAAA,QAAQ,EAAE;AAAvC,GAAP;AACA;;AAED,SAASC,OAAT,GAAkB;AAAA;;AACjB,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBhB,UAAU,CAACI,OAAD,EAAU,EAAV,CAApC;AACA,QAAM,CAACM,IAAD,EAAOO,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASiB,YAAT,CAAsBC,CAAtB,EAAwB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAAC;AAACT,MAAAA,IAAI,EAAEL,OAAO,CAACC,QAAf;AAAyBkB,MAAAA,OAAO,EAAE;AAACX,QAAAA,IAAI,EAAEA;AAAP;AAAlC,KAAD,CAAR;AACAO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACA;;AAED,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAM,MAAA,EAAE,MAAR;AAAS,MAAA,MAAM,EAAEC,YAAjB;AAAA,6BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAER,IAA1B;AAAgC,QAAA,QAAQ,EAAES,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AAAtD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFA,eAKA;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADD;AASA;;GAnBQR,O;;KAAAA,O;AAqBT,eAAeA,OAAf,C,CAsCA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useReducer, useState } from 'react';\r\n\r\nconst ACTIONS = {\r\n\tADD_TODO: 'add-todo',\r\n}\r\n\r\nfunction reducer(state, action){\r\n\tswitch(action.type){\r\n\t\tcase ACTIONS.ADD_TODO:\r\n\t\t\treturn [...todos, newTodo(name)]\r\n\t}\r\n}\r\n\r\nfunction newTodo(name){\r\n\treturn {id: Date.now(), name: name, complete: false}\r\n}\r\n\r\nfunction Counter(){\r\n\tconst [todos, dispatch] = useReducer(reducer, [])\r\n\tconst [name, setName] = useState('')\r\n\r\n\tfunction handleSubmit(e){\r\n\t\te.preventDefault()\r\n\t\tdispatch({type: ACTIONS.ADD_TODO, payload: {name: name}})\r\n\t\tsetName('')\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<h3>useReducer Hook</h3>\r\n\t\t<form on Submit={handleSubmit}>\r\n\t\t\t<input type=\"text\" calue={name} onChange={e => setName(e.target.value)}/>\r\n\t\t</form>\r\n\t\t<hr></hr>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Counter\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const initialState = { count: 0 };\r\n\r\n// function reducer(state, action) {\r\n// \tswitch (action.type) {\r\n// \t\tcase 'increment':\r\n// \t\t\treturn { count: state.count + 1 };\r\n// \t\tcase 'decrement':\r\n// \t\t\treturn { count: state.count - 1 };\r\n// \t\tdefault:\r\n// \t\t\tthrow new Error();\r\n// \t}\r\n// }\r\n\r\n// function Counter() {\r\n// \tconst [state, dispatch] = useReducer(reducer, initialState);\r\n// \treturn (\r\n// \t\t<>\r\n// \t\t<h3>useReducer Hook:</h3>\r\n// \t\t\tCount: {state.count}\r\n// \t\t\t<button onClick={() => dispatch({ type: 'decrement' })}>-</button>||=||\r\n// \t\t\t<button onClick={() => dispatch({ type: 'increment' })}>+</button>\r\n// \t\t\t<hr></hr>\r\n// \t\t</>\r\n// \t);\r\n// }\r\n\r\n// export default Counter"]},"metadata":{},"sourceType":"module"}