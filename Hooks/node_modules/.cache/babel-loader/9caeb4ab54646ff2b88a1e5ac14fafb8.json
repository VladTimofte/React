{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\React_Courses\\\\hooks\\\\src\\\\components\\\\UseEffect.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Counter() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [calculation, setCalculation] = useState(0);\n  useEffect(() => {\n    setCalculation(() => count * 2);\n  }, [count]); // <- add the count variable here\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calculation: \", calculation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Counter, \"dYqs7xbQwR/GAZLMtMv4/OC24MY=\");\n\n_c = Counter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/React_Courses/hooks/src/components/UseEffect.js"],"names":["useState","useEffect","ReactDOM","Counter","count","setCount","calculation","setCalculation","c","render","document","getElementById"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfM,IAAAA,cAAc,CAAC,MAAMH,KAAK,GAAG,CAAf,CAAd;AACA,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAJkB,CAML;;AAEb,sBACC;AAAA,4BACC;AAAA,4BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAEG,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,kCAAiBF,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA,kBADD;AAOA;;GAfQH,O;;KAAAA,O;AAiBTD,QAAQ,CAACO,MAAT,eAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA6BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7B","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction Counter() {\r\n\tconst [count, setCount] = useState(0);\r\n\tconst [calculation, setCalculation] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCalculation(() => count * 2);\r\n\t}, [count]); // <- add the count variable here\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Count: {count}</p>\r\n\t\t\t<button onClick={() => setCount((c) => c + 1)}>+</button>\r\n\t\t\t<p>Calculation: {calculation}</p>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nReactDOM.render(<Counter />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}